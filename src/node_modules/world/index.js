var three = require('three');
var textures = require('textures');
var tweener = require('tweener');
var physics = require('physics');

var initd = false;

var scene;

function init() {
	if(initd) return;
	initd = true;

	scene = new three.Scene();
	module.exports.scene = scene;

	delete module.exports.init;
}

function spawnDeathToll(person) {
	var family ={};
	family.children = [];
	family.pets = [];

	family.wife = Math.random() > 0.5 ? true : false;
	var children  = Math.random ()> 0.5  ? true : false;
	var pets  = Math.random ()> 0.5  ? true : false;

	if (family.wife && children) {
		numChild = ~~(Math.random() * 3);
		for (i = 0; i < numChild; i++) { 
			if (Math.random() > 0.5) { 
				family.children.push('icon_boy.png');
			}
			else {
				family.children.push('icon_daughter.png');	
			}
		}

	}
	if (pets) {
		numPets = ~~(Math.random() * 3);
		for (i = 0; i < numPets; i++) { 
			if (Math.random() > 0.5) { 
				family.pets.push('icon_dog.png');
			}
			else {
				family.pets.push('icon_cat.png');	
			}
		}
	}
	
	if (family.wife) {
		debugger;
		getMesh('icon_wife.png', person);
	}	 
	if (family.children.length > 0)
	{
		debugger;
		family.children.forEach(function(filename) {
		getMesh(family.children[filename], person);
		});
	}
	if (family.pets.length > 0)
	{
		debugger;
		family.pets.forEach(function(filename) {
		getMesh(family.pets[filename], person);
		});
	}


}

function getMesh(filename, person) { 
	var mesh = textures.getSprite(filename);
	//debugger;
	mesh.position.copy(person.mesh.position);
	mesh.position.z = person.height;
	scene.add(mesh);
	tweener.to(mesh.position, 2, {
		z: mesh.position.z + 200,
		onComplete: function() {
			mesh.parent.remove(mesh);
		}
	});
}

function targetSpriteAt(position) {
	var mesh = textures.getSprite('target.png');
	mesh.position.x = position.x * physics.SCALE_INV;
	mesh.position.y = position.y * physics.SCALE_INV;
	mesh.scale.multiplyScalar(0.3);
	scene.add(mesh);
	tweener.to(mesh.scale, 0.5, {
		x: mesh.scale.x + 50,
		y: mesh.scale.y + 50,
		onComplete: function() {
			mesh.parent.remove(mesh);
		}
	});
}

module.exports = {
	init: init,
	death:spawnDeathToll,
	targetSpriteAt: targetSpriteAt
};