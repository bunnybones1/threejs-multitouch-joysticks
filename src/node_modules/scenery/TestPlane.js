var three = require('three');
var createPlane = require('geometry/create-plane');

var vertexShader = [
	"varying float d;",
	"varying vec2 vUv;",
	"void main() {",
	"	gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);",
	"	vUv = uv;",
	"	d = gl_Position.z * gl_Position.z * gl_Position.z;",
	"}"
].join("\n");

var fragmentShader = [
	"varying float d;",
	"uniform vec3 color;",
	"uniform vec3 color2;",
	"varying vec2 vUv;",
	"uniform sampler2D map;",
	"void main() {",
	"	vec4 texel = texture2D( map, vUv );",
	"	vec3 mixedColor = mix(color * texel.rgb, color2, d);",
	"	gl_FragColor = vec4(mixedColor, texel.a);",
	"}"
].join("\n");


var geometry;
var active = false;

function getGeometry() {
	if(!geometry) {
		geometry = createPlane();
	}
	return geometry;
}

var material;
function getMaterial() {
	if(!material) {
		var uniforms = {
			color: { type: 'c', value: new THREE.Color(0.5, 0.6, 0.5) },
			color2: { type: 'c', value: new THREE.Color(0.8, 0.85, 0.9) },
			map: { type: 't', value: new THREE.ImageUtils.loadTexture('assets/quick_rock.png')}
		}
		material = new three.ShaderMaterial({
			uniforms: uniforms,
			fragmentShader: fragmentShader,
			vertexShader: vertexShader,
			alphaTest: 0.5,
			transparent: true
		});
	}
	return material;
}

function TestPlane() {
	three.Mesh.call(this, getGeometry(), getMaterial());
}

TestPlane.prototype = Object.create(three.Mesh.prototype);

module.exports = TestPlane;