var Checkerboard = require('threejs-texture-checkerboard');
var three = require('three');
var world = require('world');
var view = require('view');
var pool = require('./Pool');
var TestPlane = require('./TestPlane');

var initd = false;

var p;



function init() {
	if(initd) return;
	initd = true;

	
	var scene = world.scene;
	//var geometry = new three.PlaneGeometry(1, 1, 1, 1);
	

	p = new pool(200, "testPlane");
	placeItems(scene);

	exports.teleport = teleport;
	exports.preRender = preRender;
	delete exports.init;
}

var teleportees = [];
function teleport(distance) {
	teleportees.forEach(function(teleportee) {
		teleportee.position.x += distance * (1-teleportee.parallax);
	});
}

function registerTeleportee(object) {
	teleportees.push(object);
}

function deregisterTeleportee(object) {
	var index = teleportees.indexOf(object);
	if(index !== -1) {
		teleportees.splice(index, 1);
	}
}

function preRender() {
	var dx = view.centerDelta.x;
	var dy = view.centerDelta.y;
	p.poolees.forEach(function(item) {
		item.position.x += dx * item.parallax;
		item.position.y += dy * item.parallax;
		var antiParallax = 1 - item.parallax;
		if(item.position.x < -800){
			item.position.x += 1600;
		} else if(item.position.x > 800) {
			item.position.x -= 1600;
		}
	});
}


function placeItems(scene, num) { 
	p.poolees.forEach(function (plane) {
		plane.position.set(Math.random() * 15000, Math.random() * 50, (1-Math.pow(Math.random(), 2)) * -1200 + 200);
		plane.parallax = plane.position.z / -1000;
		plane.scale.set(Math.random() * 200 + 50, Math.random() * 40 + 15, 1);
		plane.rotation.z = (Math.random() - 0.5) * 0.2;
		scene.add(plane);

		registerTeleportee(plane);
	});
}
exports = {
	init: init
};

module.exports = exports;