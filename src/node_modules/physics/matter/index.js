var initd = false;

var canvas = require('canvas');
var world = require('world');
var Matter = require('matter-js');

function init() {
	if(initd) return;
	initd = true;
	var Engine = Matter.Engine,
		World = Matter.World,
		Bodies = Matter.Bodies,
		Body = Matter.Body,
		Composite = Matter.Composite,
		Composites = Matter.Composites,
		Common = Matter.Common,
		Constraint = Matter.Constraint;

	var scene = world.scene;

	var debugMeshes = [];
	var controller = {
		world: function(engine) {
			elephant.force.x = 0.02;
			// elephant.position.x += 0.1;
			physicsWorld.bodies.forEach(function(body){
				body.debugMesh.position.x = body.position.x;
				body.debugMesh.position.y = body.position.y;
				body.debugMesh.rotation.z = body.angle;
			});
		},
		clear: function() {
			console.log('clear');
			debugMeshes.forEach(function(debugMesh) {
				scene.remove(debugMesh);
				delete debugMesh.body.debugMesh;
				delete debugMesh.body;
			});
			physicsWorld.bodies.forEach(function(body) {
				var geometry;
				if(body.width && body.height) {
					geometry = new THREE.PlaneGeometry(body.width, body.height, 1, 1);
				} else if(body.radius) {
					geometry = new THREE.SphereGeometry(body.radius, 8, 4);
				} else {
					throw new Error('I don\'t know.');
				}
				var debugMesh = new THREE.Mesh(geometry);
				debugMesh.body = body;
				body.debugMesh = debugMesh;
				scene.add(debugMesh);
				debugMeshes.push(debugMesh);
			});
		}
	}

	var Render = {
		create: function() {
			return {
				controller: controller
			};
		}
	}
	var engine = Engine.create(canvas.canvas, {
		render: {
			controller: Render
		}
	});
	var physicsWorld = engine.world;
	var gravity = physicsWorld.gravity;
	gravity.y *= -1;

	var width = 1200,
		height = 10,
		x = 300,
		y = 10;

	var testPlatform = Bodies.rectangle(x, y, width, height, { friction: 0.01, restitution: 0.4, isStatic: true });
	testPlatform.width = width;
	testPlatform.height = height;
	World.add(physicsWorld, testPlatform);

	y += 100;
	var radius = 30;
	for (var i = 0; i < 50; i++) {
		radius = 10 + Math.random() * 10;
		x = Math.random() * 600;
		y = Math.random() * 400;
		var testBall = Bodies.circle(x, y, radius, { friction: 0.01, restitution: 0.4, groupId: 1});
		testBall.radius = radius;
		World.add(physicsWorld, testBall);
	};

	radius = 80;
	x = 300;
	y = 100;
	var elephant = Bodies.circle(x, y, radius, { friction: 0.01, restitution: 0.4, groupId: 1});
	elephant.radius = radius;
	World.add(physicsWorld, elephant);


	Engine.run(engine);

	delete module.exports.init;
}

module.exports = {
	init: init
};