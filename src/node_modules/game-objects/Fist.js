var Actor = require('./Actor');
var physics = require('physics');
var bits = require('physics/bits');
var defaults = require('lodash.defaults');

var defaultActorParams = {
	name: 'fist',
	shape: 'circle',
	radius: 10,
	mass: 1,
	friction: 0,
	x: 300,
	y: 200,
	categoryBits: bits.enemyWeapon,
	maskBits: bits.environment | bits.hero,
	linearDamping: 10,
	interval: 1000,
	color: 0x7f22ff,
	side: 50
};

function Fist(params) {
	params = params || {};
	defaults(params, defaultActorParams);
	Actor.call(this, params);
	this.side = params.side;

	this.addBox(20, 20, 20, 0, 0, params.z, params.color, params.color2);
	this.mesh.postPhysicsUpdate = this.postPhysicsUpdate.bind(this);
}

Fist.prototype = Object.create(Actor.prototype);

var material;
Fist.prototype.getMaterial = function(color) {
	if(!material) {
		material = new THREE.MeshBasicMaterial({
			color: color,
			depthTest: false,
			transparent: true
		});
	}
	return material;
};

var geometry;
Fist.prototype.getGeometry = function (radius) {
	if (!geometry){
		geometry = new THREE.SphereGeometry(radius, 6, 4);
	}
	return geometry;
};


Fist.prototype.postPhysicsUpdate = function() {
	this.mesh.translateY(15 * -this.side);
	this.mesh.translateX(20);
};

module.exports = Fist;