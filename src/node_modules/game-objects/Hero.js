var Person = require('./Person');
var physics = require('physics');

function Hero(params) {
	params = params || {};
	Person.call(this, params);
	var min = new THREE.Vector3(-500, -500, -500);
	this.minOffset = min.clone();
	var max = new THREE.Vector3(500, 500, 500);
	this.maxOffset = max.clone();
	this.sightBounds = new THREE.Box3(min, max);
}

Hero.prototype = Object.create(Person.prototype);

var geometry;
Hero.prototype.getGeometry = function (radius) {
	if (!geometry){
		geometry = new THREE.SphereGeometry(radius, 8, 4)
	}
	return  geometry
}


Hero.prototype.getSightBounds = function() {
	this.sightBounds.min.copy(this.mesh.position).add(this.minOffset);
	this.sightBounds.max.copy(this.mesh.position).add(this.maxOffset);
	this.sightBounds.min.y = Math.max(this.sightBounds.min.y, physics.floorBody.bodyMesh.position.y);
	this.sightBounds.max.y = Math.min(this.sightBounds.max.y, physics.ceilingBody.bodyMesh.position.y);
	return this.sightBounds;
}

// Hero.prototype.walk = function(value) {
// 	this.walkForce.x = (value * physics.SCALE);
// };

module.exports = Hero;