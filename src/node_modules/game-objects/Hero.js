var defaults = require('lodash.defaults');
var physics = require('physics');
var world = require('world');
var three = require('three');

var defaultActorParams = {
   name: 'hero',
   shape: 'circle',
   radius: 60,
   mass: 100,
   friction: 0,
   x: 300,
   y: 100,
   categoryBits: 2,
   maskBits: 1,
   fixedRotation: true,
   linearDamping: 1
};


function Hero(params) {
   params = params || {};
   this.walkForce = new physics.Box2D.b2Vec2(0.075, 0);
   this.walking = true;
   defaults(params, defaultActorParams);
   var mesh = new THREE.Mesh(new THREE.SphereGeometry(params.radius, 16, 8));

   params.mesh = mesh
   this.body = physics.addActor(params);
   this.fixture = this.body.GetFixtureList();
}

var geometry;
function getGeometry() {
   if(!geometry) {
      geometry = new three.PlaneGeometry(20, 20, 1, 1);
   }
   return geometry;
}
var material;
function getMaterial() {
   if(!material) {
      material = new three.MeshBasicMaterial({
         wireframe: true,
         color: 0xffffff
      });
   }
   return material;
}

Hero.prototype.walk = function(value) {
   if(value === 0) {
      this.walking = false;
      this.fixture.SetFriction(1000);
   } else {
      this.walking = true;
      this.fixture.SetFriction(0);
      this.walkForce.x = (value * physics.SCALE);
   }
};

module.exports = Hero;