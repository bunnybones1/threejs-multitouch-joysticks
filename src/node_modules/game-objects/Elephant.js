var defaults = require('lodash.defaults');
var physics = require('physics');
var world = require('world');
var three = require('three');
var defaultActorParams = {
	name: 'elephant',
	shape: 'circle',
	radius: 60,
	mass: 100,
	friction: 0,
	x: 300,
	y: 100,
	categoryBits: 2,
	maskBits: 1,
	fixedRotation: true,
	linearDamping: 1
};

var rayPoint1;
var rayPoint2;

function Elephant(params) {
	params = params || {};
	this.walkForce = new physics.Box2D.b2Vec2(0.075, 0);
	this.walking = true;
	defaults(params, defaultActorParams);
	this.body = physics.addActor(params);
	this.fixture = this.body.GetFixtureList();
	if(!rayPoint1) {
		rayPoint1 = new physics.Box2D.b2Vec2();
		rayPoint2 = new physics.Box2D.b2Vec2();
	}
}

Elephant.prototype.look = function() {
	var pos = this.body.GetPosition();
	var x = pos.x;
	var y = pos.y;
	rayPoint1.x = x-10;
	rayPoint1.y = y-10;
	rayPoint2.x = x+10;
	rayPoint2.y = y+10;
	// console.log(rayPoint1.x,rayPoint1.y,rayPoint2.x,rayPoint2.y);
	// var groundFixture = physics.groundBody.GetFixtureList();
	// var cb = new physics.Box2D.b2RayCastCallback(this.handleRay);
	// cb.ReportFixture = this.handleRay;
	// groundFixture.RayCast(this.handleRay, rayPoint1, rayPoint2);
	physics.physicsWorld.RayCast(this.handleRay, rayPoint1, rayPoint2);
};

var sightMesh;
function getSightMesh() {
	if(!sightMesh){
		sightMesh = new three.Mesh(new three.SphereGeometry(20, 16, 8));
		world.scene.add(sightMesh);
	}
	return sightMesh;
}
Elephant.prototype.handleRay = function(fixture, b, c, d) {
	fixture;
	b;
	c;
	d;
	
	debugger;
	getSightMesh().position.set(Math.random() * 1000, Math.random(), 0);
};

Elephant.prototype.walk = function(value) {
	if(value === 0) {
		this.walking = false;
		this.fixture.SetFriction(1000);
	} else {
		this.walking = true;
		this.fixture.SetFriction(0);
		this.walkForce.x = (value * physics.SCALE);
	}
};

Elephant.prototype.updateWalk = function() {
	this.look();
	if(!this.walking) {
		this.walkForce.x = (-this.body.GetLinearVelocity().x * 0.5);
	}
	this.body.ApplyForce(this.walkForce, this.body.GetPosition());
}

module.exports = Elephant;