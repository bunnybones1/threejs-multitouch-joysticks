var defaults = require('lodash.defaults');
var physics = require('physics');
var defaultActorParams = {
	name: 'elephant',
	shape: 'circle',
	radius: 60,
	mass: 100,
	friction: 0,
	x: 300,
	y: 100,
	categoryBits: 2,
	maskBits: 1,
	fixedRotation: true,
	linearDamping: 1
};

var rayPoint1;
var rayPoint2;

function Elephant(params) {
	params = params || {};
	this.walkForce = new physics.Box2D.b2Vec2(0, 0);
	defaults(params, defaultActorParams);
	this.body = physics.addActor(params);
	this.fixture = this.body.GetFixtureList();
	if(!rayPoint1) {
		rayPoint1 = new physics.Box2D.b2Vec2();
		rayPoint2 = new physics.Box2D.b2Vec2();
	}
}

Elephant.prototype.look = function() {
	var pos = this.body.GetPosition();
	var x = pos.get_x();
	var y = pos.get_y();
	rayPoint1.set_x(x-10);
	rayPoint1.set_y(y-10);
	rayPoint2.set_x(x+10);
	rayPoint2.set_y(y+10);
	console.log(rayPoint1.get_x(),rayPoint1.get_y(),rayPoint2.get_x(),rayPoint2.get_y());
	var groundFixture = physics.groundBody.GetFixtureList();
	var cb = new physics.Box2D.b2RayCastCallback();
	cb.ReportFixture = this.handleRay;
	// groundFixture.RayCast(cb, rayPoint1, rayPoint2);
	// physics.physicsWorld.RayCast(cb, rayPoint1, rayPoint2);
};

Elephant.prototype.handleRay = function(a, b, c, d) {
	debugger;
};

Elephant.prototype.walk = function(value) {
	if(value === 0) {
		this.walking = false;
		this.fixture.SetFriction(1000);
	} else {
		this.walking = true;
		this.fixture.SetFriction(0);
		this.walkForce.set_x(value * physics.SCALE);
	}
};

Elephant.prototype.updateWalk = function() {
	this.look();
	if(!this.walking) {
		this.walkForce.set_x(-this.body.GetLinearVelocity().get_x() * 0.5);
	}
	this.body.ApplyForceToCenter(this.walkForce);
}

module.exports = Elephant;