var Person = require('./Person');
var Fist = require('./Fist');
var bits = require('physics/bits');
var defaults = require('lodash.defaults');
var physics = require('physics');


var defaultFistParams = {
	categoryBits: bits.enemyWeapon,
	maskBits: bits.environment | bits.hero,
}

function Fighter(params) {
	params = params || {};
	Person.call(this, params);
	var fistParams = params.fistParams || {};
	if(!fistParams.material) {
		fistParams.material = this.getMaterial();
	}
	defaults(fistParams, defaultFistParams);
	// fistParams.fighter = this;
	this.weapons = [];
	this.addWeapon(new Fist(fistParams));
	this.addWeapon(new Fist(fistParams));
}

Fighter.prototype = Object.create(Person.prototype);

Fighter.prototype.addWeapon = function(weapon) {
	this.weapons.push(weapon);
	var def = new physics.Box2D.b2PrismaticJointDef();
	def.bodyA = this.body;
	def.bodyB = weapon.body;
	def.localAnchorB.y = this.weapons.length === 1 ? 0.03 : -0.03;
	def.enableLimit = true;
	def.upperTranslation = 0.1;
	var joint = physics.physicsWorld.CreateJoint(def);
}

// var temp = new physics.Box2D.b2Vec2(0,0);
Fighter.prototype.updateWalk = function() {
	Person.prototype.updateWalk.call(this);
	// if(this.target) {
	// 	var currLocation = this.body.GetPosition();
	// 	if(this.target.GetPosition()) {
			
	// 	}
	// }
}

Fighter.prototype.attack = function() {

}
module.exports = Fighter;