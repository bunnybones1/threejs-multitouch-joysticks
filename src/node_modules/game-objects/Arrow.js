var defaults = require('lodash.defaults');
var physics = require('physics');
var world = require('world');
var three = require('three');
var createPlane = require('geometry/create-plane');

var defaultActorParams = {
	name: 'Arrow',
	shape: 'circle',
	radius: 6,
	mass: 1,
	friction: 0,
	x: 300,
	y: 100,
	vx: 0,
	vy: 0,
	categoryBits: 2,
	maskBits: 1,
	fixedRotation: true,
	linearDamping: 0.5,
	bullet: true
};

var rayPoint1;
var rayPoint2;

var geometry;
function getGeometry() {
	if(!geometry) {
		geometry = createPlane(0, 0.5);
	}
	return geometry;
}

var material;
function getMaterial() {
	if(!material) {
		material = new three.MeshBasicMaterial({
			color: 0x000000
		});
	}
	return material;
}

function Arrow(params) {
	params = params || {};
	defaults(params, defaultActorParams);
	var mesh = new three.Mesh(getGeometry(), getMaterial());
	params.mesh = mesh;
	mesh.scale.x = 24;
	mesh.updateRotation = updateRotation.bind(this);
	this.body = physics.addActor(params);
	this.bodyMesh = mesh;
	if(params.vx && params.vy) {
		this.body.ApplyForce(physics.getTempVec2(params.vx, params.vy), this.body.GetPosition());
	}
	mesh.rotation.z = Math.atan2(params.vy, params.vx) + Math.PI;
}

function updateRotation() {
	var vel = this.body.m_linearVelocity;
	this.bodyMesh.rotation.z = Math.atan2(vel.y, vel.x) + Math.PI;
}

module.exports = Arrow;